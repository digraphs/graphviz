#############################################################################
##
#W  standard/display.tst
#Y  Copyright (C) 2014-15                                James D. Mitchell
##
##  Licensing information can be found in the README file of this package.
##  Taken from the old digraphs display package
##
#############################################################################
##
gap> START_TEST("Digraphs package: standard/display.tst");
gap> LoadPackage("digraphs", false);;

#
gap> DIGRAPHS_StartTest();

# DotHighlightedDigraph
gap> gr := Digraph([[2, 3], [2], [1, 3]]);
<immutable digraph with 3 vertices, 5 edges>
gap> Print(DotHighlightedDigraph(gr, [1, 2], "red", "black"));
//dot
digraph hgn{
subgraph lowverts{
node [shape=circle, color=black]
 edge [color=black]
3
}
subgraph highverts{
node [shape=circle, color=red]
 edge [color=red]
1
2
}
subgraph lowverts{
3 -> 1
3 -> 3
}
subgraph highverts{
1 -> 2
1 -> 3 [color=black]
2 -> 2
}
}
gap> D := CycleDigraph(5);;
gap> DotHighlightedDigraph(D, [10], "black", "grey");
Error, the 2nd argument <highverts> must be a list of vertices of the 1st argu\
ment <D>,
gap> DotHighlightedDigraph(D, [1], "", "grey");
Error, the 3rd argument <highcolour> must be a string containing the name of a\
 colour,
gap> DotHighlightedDigraph(D, [1], "black", "");
Error, the 4th argument <lowcolour> must be a string containing the name of a \
colour,
gap> Print(DotHighlightedDigraph(D, Filtered(DigraphVertices(D), IsEvenInt)));
//dot
digraph hgn{
subgraph lowverts{
node [shape=circle, color=grey]
 edge [color=grey]
1
3
5
}
subgraph highverts{
node [shape=circle, color=black]
 edge [color=black]
2
4
}
subgraph lowverts{
1 -> 2
3 -> 4
5 -> 1
}
subgraph highverts{
2 -> 3 [color=grey]
4 -> 5 [color=grey]
}
}

#  DIGRAPHS_UnbindVariables
gap> Unbind(adj);
gap> Unbind(dot);
gap> Unbind(gr);
gap> Unbind(gr1);
gap> Unbind(gr2);
gap> Unbind(r);
gap> Unbind(tmpdir);

#
gap> DIGRAPHS_StopTest();
gap> STOP_TEST("Digraphs package: standard/display.tst", 0);
